plugins {
    alias(libs.plugins.androidApplication)
    alias(libs.plugins.jetbrainsKotlinAndroid)
//    id 'com.android.application' version '7.6.4' apply false
//    id 'com.android.library' version '7.6.4' apply false
    id("kotlin-kapt")
}

android {
    namespace 'com.example.monocon'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.monocon"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_18
        targetCompatibility JavaVersion.VERSION_18
    }
    dataBinding {
        enabled = true
    }
    viewBinding {
        enabled = true
    }
    kotlinOptions {
//        jvmTarget = '1.8'
        jvmTarget = "18"
    }
}



dependencies {
    // CameraX core library using the camera2 implementation
    def cameraxVersion = "1.3.0"
    // The following line is optional, as the core library is included indirectly by camera-camera2
    implementation "androidx.camera:camera-core:${cameraxVersion}"
    implementation "androidx.camera:camera-camera2:${cameraxVersion}"
    // If you want to additionally use the CameraX Lifecycle library
    implementation "androidx.camera:camera-lifecycle:${cameraxVersion}"
    // If you want to additionally use the CameraX View class
    implementation "androidx.camera:camera-view:${cameraxVersion}"

    implementation libs.androidx.core.ktx
    implementation libs.androidx.appcompat
    implementation libs.material
    implementation libs.androidx.activity
    implementation libs.androidx.constraintlayout
    implementation project(':OpenCV')
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core

    // This adds the Qualcomm (R) Neural Processing SDK as a project dependency
    implementation files("libs/snpe-release.aar")
    // This adds the Platform Validator tool (optional) as a project dependency
    implementation files("libs/platform-validator.aar")
}